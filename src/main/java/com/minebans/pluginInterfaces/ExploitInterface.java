package com.minebans.pluginInterfaces;

import java.util.LinkedHashMap;
import java.util.Map.Entry;

import com.minebans.MineBans;
import com.minebans.bans.BanReason;
import com.minebans.pluginInterfaces.nocheat.NoCheatPluginInterface;
import com.minebans.pluginInterfaces.nocheatplus.NoCheatPlusPluginInterface;

public class ExploitInterface {
	
	private ExploitPluginInterface pluginInterface;
	
	public ExploitInterface(MineBans plugin){
		LinkedHashMap<String, Class<? extends ExploitPluginInterface>> suppportedPlugins = new LinkedHashMap<String, Class<? extends ExploitPluginInterface>>(8);
		
		suppportedPlugins.put("NoCheat", NoCheatPluginInterface.class);
		suppportedPlugins.put("NoCheatPlus", NoCheatPlusPluginInterface.class);
		
		for (Entry<String, Class<? extends ExploitPluginInterface>> entry : suppportedPlugins.entrySet()){
			String pluginName = entry.getKey();
			Class<? extends ExploitPluginInterface> cls = entry.getValue();
			
			if (plugin.pluginManager.isPluginEnabled(pluginName)){
				try{
					this.pluginInterface = cls.getConstructor(MineBans.class).newInstance(plugin);
					
					plugin.log.info("Using " + this.pluginInterface.getPluginName() + " for exploit data, checking config.");
					
					if (!this.pluginInterface.checkConfig()){
						plugin.log.fatal(this.pluginInterface.getPluginName() + " minimum config was not met.");
					}
					
					break;
				}catch (Exception e){
					e.printStackTrace();
				}
			}
		}
		
		if (!this.foundExploitPlugin()){
			plugin.log.warn("A suitable exploit detection plugin was not found !");
			plugin.log.warn("It is strongly recomended that you install a plugin such as NoCheatPlus");
		}
	}
	
	public boolean foundExploitPlugin(){
		return (this.pluginInterface != null);
	}
	
	public Long getMaxViolationLevel(String playerName, BanReason reason){
		if (!this.foundExploitPlugin()){
			return null;
		}
		
		return this.pluginInterface.getMaxViolationLevel(playerName, reason);
	}
	
}
